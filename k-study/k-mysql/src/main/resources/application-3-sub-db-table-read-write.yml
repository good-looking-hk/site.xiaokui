# 关于分布式id的生成，可以参考滴滴的tinydd 或 美团的leaf
# 分库分表中的分页查询，比如我查询两个库中的第二页，一页三条数据
# 即 select * from sys_user order by id limit 2, 3（100）  -- offset size
# 那么sharding-jdbc是怎么实现的，去每个库中去前5（102）条，然后比较排序得出需要的3（100）条数据

# 分组 + 统计 / group by + sum 原理都是统计每个库每个表，然后一起汇总
# 分库分表概念我们知道，那么具体怎么个分表法呢？

# 以水平分表为例：奇数id走user_1, 偶数id走user_2
# 以水平分库为例：男走库1，女走库2

mybatis:
  config-location: classpath:mybatis-config.xml
server:
  port: 8088
spring:
  shardingsphere:
    datasource:
      master0:
        driver-class-name: com.mysql.jdbc.Driver
        password: root
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://localhost:3306/ms0?characterEncoding=utf-8
        username: root
      master1:
        driver-class-name: com.mysql.jdbc.Driver
        password: root
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://localhost:3306/ms1?characterEncoding=utf-8
        username: root
      names: master0,slave0,master1,slave1
      slave0:
        driver-class-name: com.mysql.jdbc.Driver
        password: root
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://localhost:3306/sl0?characterEncoding=utf-8
        username: root
      slave1:
        driver-class-name: com.mysql.jdbc.Driver
        password: root
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://localhost:3306/sl1?characterEncoding=utf-8
        username: root
    props:
      sql:
        show: true
    sharding:
      default-database-strategy:
        inline:
          algorithm-expression: master$->{age % 2}
          sharding-column: age
      master-slave-rules:
        master0:
          master-data-source-name: master0
          slave-data-source-names: slave0
        master1:
          master-data-source-name: master1
          slave-data-source-names: slave1
      tables:
        tab_user:
          actual-data-nodes: master$->{0..1}.tab_user$->{0..1}
          table-strategy:
            inline:
              algorithm-expression: tab_user$->{id % 2}
              sharding-column: id
